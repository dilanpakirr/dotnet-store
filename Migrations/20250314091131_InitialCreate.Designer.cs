// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_store.Models;

#nullable disable

namespace dotnet_store.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250314091131_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("dotnet_store.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Category 1",
                            Url = "category-1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Category 2",
                            Url = "category-2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Category 3",
                            Url = "category-3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Category 4",
                            Url = "category-4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Category 5",
                            Url = "category-5"
                        });
                });

            modelBuilder.Entity("dotnet_store.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHome")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Product 1 Description",
                            Image = "1.jpeg",
                            IsActive = true,
                            IsHome = true,
                            Price = 10.0,
                            ProductName = "Product 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Product 2 Description",
                            Image = "2.jpeg",
                            IsActive = true,
                            IsHome = true,
                            Price = 20.0,
                            ProductName = "Product 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Product 3 Description",
                            Image = "3.jpeg",
                            IsActive = true,
                            IsHome = true,
                            Price = 30.0,
                            ProductName = "Product 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Product 4 Description",
                            Image = "4.jpeg",
                            IsActive = true,
                            IsHome = true,
                            Price = 40.0,
                            ProductName = "Product 4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Product 5 Description",
                            Image = "5.jpeg",
                            IsActive = true,
                            IsHome = true,
                            Price = 50.0,
                            ProductName = "Product 5"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Product 6 Description",
                            Image = "6.jpeg",
                            IsActive = true,
                            IsHome = true,
                            Price = 60.0,
                            ProductName = "Product 6"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Product 7 Description",
                            Image = "7.jpeg",
                            IsActive = true,
                            IsHome = true,
                            Price = 70.0,
                            ProductName = "Product 7"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Product 8 Description",
                            Image = "8.jpeg",
                            IsActive = true,
                            IsHome = true,
                            Price = 80.0,
                            ProductName = "Product 8"
                        });
                });

            modelBuilder.Entity("dotnet_store.Models.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Slides");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "slider-1.jpeg",
                            Title = "Slide 1",
                            Url = "slide-1"
                        },
                        new
                        {
                            Id = 2,
                            Image = "slider-2.jpeg",
                            Title = "Slide 2",
                            Url = "slide-2"
                        },
                        new
                        {
                            Id = 3,
                            Image = "slider-3.jpeg",
                            Title = "Slide 3",
                            Url = "slide-3"
                        });
                });

            modelBuilder.Entity("dotnet_store.Models.Product", b =>
                {
                    b.HasOne("dotnet_store.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("dotnet_store.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
